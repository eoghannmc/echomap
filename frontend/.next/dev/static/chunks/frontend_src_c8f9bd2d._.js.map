{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mccar/PROJECTS/2400%20ECHO%20APP/echoapp/frontend/src/components/MapApp.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport maplibregl, { Map as MLMap, GeoJSONSource } from \"maplibre-gl\";\r\n\r\n/* ===================== Types ===================== */\r\ntype Operator = \"AND\" | \"OR\" | \"<\" | \">\" | \"=\" | \"BETWEEN\" | \"WITHIN\" | \"IN\";\r\ntype Intent = \"address\" | \"multi\" | \"places\" | \"areas\" | \"data\";\r\ntype Tag = \"Data\" | \"Places\" | \"Areas\" | \"Address\" | \"Multi\";\r\n\r\ntype SectionStatus = \"input\" | \"searching\" | \"verified\" | \"error\";\r\ntype DatasetKey = \"planning_zones\" | \"pois\" | \"sa2\" | \"dwell_struct\";\r\n\r\ninterface Filter {\r\n  field: string;\r\n  op: Operator;\r\n  value?: number | string | [number, number] | string[];\r\n}\r\n\r\ninterface ForLocation {\r\n  mode: \"address\" | \"area\" | \"within\";\r\n  address?: string;\r\n  area?: string;\r\n  within?: { distance_m: number; place_type?: string; text?: string };\r\n  status: SectionStatus;\r\n}\r\n\r\ninterface DatasetSection {\r\n  id: string;\r\n  status: SectionStatus;\r\n  dataset?: DatasetKey;\r\n  intent?: Intent;\r\n  filters: Filter[];\r\n  options?: {\r\n    zoneCode?: string;\r\n    poiType?: string;\r\n    year?: number;\r\n    category?: string;\r\n  };\r\n  _fc?: GeoJSON.FeatureCollection;\r\n}\r\n\r\ntype SuggestItem = { key: string; tag: Tag; label: string };\r\n\r\n/* ===================== Small UI helpers ===================== */\r\nconst tagClass = {\r\n  Data: \"bg-[var(--pill-data)] text-white\",\r\n  Places: \"bg-[var(--pill-places)] text-black\",\r\n  Areas: \"bg-[var(--pill-areas)] text-white\",\r\n  Address: \"bg-[var(--pill-gray)] text-black\",\r\n  Multi: \"bg-[var(--pill-multi)] text-white\",\r\n};\r\nfunction TagPill({tag}:{tag:Tag}) {\r\n  return <span className={`text-xs px-2 py-0.5 rounded-full border border-black/10 ${tagClass[tag]}`}>{tag}</span>;\r\n}\r\nfunction Pill({\r\n  active,\r\n  children,\r\n  onClick,\r\n  className = \"\",\r\n}: {\r\n  active?: boolean;\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`text-xs px-2.5 py-1 rounded-full border transition ${active ? \"bg-[var(--clr-bg-light)]\" : \"bg-white hover:bg-gray-50\"} ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\nfunction DropdownPill({\r\n  label,\r\n  value,\r\n  items,\r\n  onSelect,\r\n  className = \"\",\r\n}: {\r\n  label?: string;\r\n  value: string;\r\n  items: string[];\r\n  onSelect: (v: string) => void;\r\n  className?: string;\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className=\"relative inline-block\">\r\n      <button\r\n        className={`text-xs px-2.5 py-1 rounded-full border bg-white hover:bg-gray-50 flex items-center gap-1 ${className}`}\r\n        onClick={() => setOpen((o) => !o)}\r\n      >\r\n        {label ? <span className=\"opacity-70\">{label}:</span> : null}\r\n        <span className=\"font-medium\">{value}</span>\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 20 20\" className=\"opacity-60\">\r\n          <path d=\"M5 7l5 5 5-5\" fill=\"currentColor\" />\r\n        </svg>\r\n      </button>\r\n      {open && (\r\n        <div className=\"absolute z-30 mt-2 bg-white border rounded-xl shadow-xl min-w-[200px] p-1\">\r\n          {items.map((opt) => (\r\n            <button\r\n              key={opt}\r\n              className={`w-full text-left px-3 py-2 rounded-lg hover:bg-gray-50 ${opt===value ? \"bg-gray-100\" : \"\"}`}\r\n              onClick={() => { onSelect(opt); setOpen(false); }}\r\n            >\r\n              {opt}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction StatusDot({status}:{status:SectionStatus}) {\r\n  const color = status===\"verified\" ? \"bg-green-500\"\r\n              : status===\"searching\" ? \"bg-blue-500\"\r\n              : status===\"error\" ? \"bg-red-500\"\r\n              : \"bg-gray-400\";\r\n  return <span className={`inline-block w-2.5 h-2.5 rounded-full ${color}`} title={status} />;\r\n}\r\n\r\n/* ===================== Utilities ===================== */\r\nasync function fetchSuggest(q: string): Promise<SuggestItem[]> {\r\n  const res = await fetch(`/api/suggest?q=${encodeURIComponent(q)}`);\r\n  if (!res.ok) return [];\r\n  const { suggestions } = await res.json();\r\n  return suggestions ?? [];\r\n}\r\nasync function fetchGeoJSON(query: any): Promise<GeoJSON.FeatureCollection> {\r\n  const res = await fetch(`/api/compile-run`, {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(query),\r\n  });\r\n  if (!res.ok) throw new Error(`compile-run failed (${res.status})`);\r\n  return await res.json();\r\n}\r\nfunction scoreSimilarity(input: string, target: string): number {\r\n  const a = input.toLowerCase().trim();\r\n  const b = target.toLowerCase().trim();\r\n  if (!a) return 0;\r\n  if (a === b) return 100;\r\n  let score = 0;\r\n  if (b.startsWith(a)) score += 60;\r\n  if (b.includes(a)) score += 30;\r\n  const aw = a.split(/\\s+/), bw = new Set(b.split(/\\s+/));\r\n  let overlap = 0; aw.forEach(w => { if (bw.has(w)) overlap++; });\r\n  return score + overlap * 5;\r\n}\r\nfunction bboxOf(fc: GeoJSON.FeatureCollection): [number, number, number, number] | null {\r\n  let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n  const visit = (c: any) => Array.isArray(c[0]) ? c.forEach(visit)\r\n    : ([minX, minY] = [Math.min(minX, c[0]), Math.min(minY, c[1])],\r\n       [maxX, maxY] = [Math.max(maxX, c[0]), Math.max(maxY, c[1])]);\r\n  try {\r\n    for (const f of fc.features) {\r\n      const g = f.geometry; if (!g) continue;\r\n      if (g.type === \"Point\") visit(g.coordinates);\r\n      else if (g.type === \"MultiPoint\" || g.type === \"LineString\") visit((g as any).coordinates);\r\n      else visit((g as any).coordinates);\r\n    }\r\n    if (minX === Infinity) return null;\r\n    return [minX, minY, maxX, maxY];\r\n  } catch { return null; }\r\n}\r\n\r\n/* ===================== Main Component ===================== */\r\nexport default function MapApp() {\r\n  /* App start: welcome vs. active */\r\n  const [appStarted, setAppStarted] = useState(false);\r\n\r\n  /* Global Edit/Done for entire panel */\r\n  const [isEditing, setIsEditing] = useState(true);\r\n  const [panelOpen, setPanelOpen] = useState(true);\r\n\r\n  /* Global Location (separate from datasets) */\r\n  const [location, setLocation] = useState<ForLocation>({\r\n    mode: \"area\", status: \"input\"\r\n  });\r\n\r\n  /* Dataset sections (1–4) */\r\n  const [sections, setSections] = useState<DatasetSection[]>([]);\r\n\r\n  /* Searchbar + suggestions */\r\n  const [text, setText] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<SuggestItem[]>([]);\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  /* Derived flags */\r\n  const allDatasetsVerified = sections.length>0 && sections.every(s => s.status===\"verified\");\r\n  const locationVerified = location.status===\"verified\";\r\n  const canShowData = appStarted && !isEditing && panelOpen && allDatasetsVerified && locationVerified;\r\n\r\n  /* Map */\r\n  const mapRef = useRef<MLMap | null>(null);\r\n  const mapReady = useRef(false);\r\n  const mapContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n  /* Suggest (debounced + ranked) */\r\n  useEffect(() => {\r\n    let alive = true;\r\n    const t = setTimeout(async () => {\r\n      try{\r\n        if(!text.trim()){ setSuggestions([]); setOpen(false); return; }\r\n        const raw = await fetchSuggest(text.trim());\r\n        const ranked = raw.map(s => ({...s,_score:scoreSimilarity(text,s.label)}))\r\n                          .sort((a,b)=>b._score-a._score)\r\n                          .slice(0,4)\r\n                          .map(({_score, ...s}) => s);\r\n        if(alive){ setSuggestions(ranked); setOpen(true); }\r\n      }catch{ if(alive){ setSuggestions([]); setOpen(false);} }\r\n    }, 120);\r\n    return ()=>{ alive=false; clearTimeout(t); };\r\n  }, [text]);\r\n\r\n  /* Map init (Positron) */\r\n  useEffect(() => {\r\n    if (mapRef.current || !mapContainer.current) return;\r\n    const map = new maplibregl.Map({\r\n      container: mapContainer.current,\r\n      style: {\r\n        version: 8,\r\n        sources: {\r\n          positron: {\r\n            type: \"raster\",\r\n            tiles: [\"https://basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"],\r\n            tileSize: 256,\r\n            attribution:\r\n              '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OSM</a> ' +\r\n              '&copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\r\n          } as any,\r\n        },\r\n        layers: [{ id: \"positron\", type: \"raster\", source: \"positron\" }],\r\n      } as any,\r\n      center: [144.9631, -37.8136],\r\n      zoom: 10,\r\n      attributionControl: true,\r\n    });\r\n    map.addControl(new maplibregl.NavigationControl({ visualizePitch: true }), \"top-right\");\r\n    map.on(\"load\", () => { mapReady.current = true; map.resize(); });\r\n    const onResize = () => map.resize();\r\n    window.addEventListener(\"resize\", onResize);\r\n    mapRef.current = map;\r\n    return () => { window.removeEventListener(\"resize\", onResize); map.remove(); mapRef.current=null; mapReady.current=false; };\r\n  }, []);\r\n\r\n  /* Draw / update layers per dataset */\r\n  useEffect(() => {\r\n    const map = mapRef.current;\r\n    if (!map || !mapReady.current) return;\r\n\r\n    const boxes: [number,number,number,number][] = [];\r\n    for (const s of sections) {\r\n      const fc = s._fc;\r\n      if (!fc) continue;\r\n      const src = `sec-${s.id}`;\r\n\r\n      const existing = map.getSource(src) as GeoJSONSource | undefined;\r\n      if (existing) existing.setData(fc as any);\r\n      else map.addSource(src, { type: \"geojson\", data: fc } as any);\r\n\r\n      const fillId = `sec-${s.id}-fill`;\r\n      const lineId = `sec-${s.id}-line`;\r\n      const ptId   = `sec-${s.id}-point`;\r\n\r\n      const safeRemove = (id:string) => { if (map.getLayer(id)) map.removeLayer(id); };\r\n\r\n      if (s.dataset===\"planning_zones\" || s.dataset===\"sa2\" || s.dataset===\"dwell_struct\") {\r\n        safeRemove(ptId);\r\n        if (!map.getLayer(fillId)) {\r\n          map.addLayer({ id:fillId, type:\"fill\", source:src, paint:{ \"fill-color\":\"#3b82f6\", \"fill-opacity\":0.35 } }, \"positron\");\r\n        }\r\n        if (!map.getLayer(lineId)) {\r\n          map.addLayer({ id:lineId, type:\"line\", source:src, paint:{ \"line-color\":\"#1f2937\",\"line-width\":1.2 } });\r\n        }\r\n      } else if (s.dataset===\"pois\") {\r\n        safeRemove(fillId); safeRemove(lineId);\r\n        if (!map.getLayer(ptId)) {\r\n          map.addLayer({ id:ptId, type:\"circle\", source:src, paint:{ \"circle-radius\":5, \"circle-color\":\"#111827\" } });\r\n        }\r\n      }\r\n\r\n      const box = bboxOf(fc); if (box) boxes.push(box);\r\n    }\r\n\r\n    if (boxes.length) {\r\n      const union = boxes.reduce((a,b)=>[Math.min(a[0],b[0]), Math.min(a[1],b[1]), Math.max(a[2],b[2]), Math.max(a[3],b[3]) ] as any, [Infinity,Infinity,-Infinity,-Infinity]);\r\n      map.fitBounds([[union[0],union[1]],[union[2],union[3]]], { padding: 40, maxZoom: 12 });\r\n    }\r\n  }, [sections]);\r\n\r\n  /* Add a new empty dataset section (limited to 4) */\r\n  function addDatasetSection() {\r\n    if (sections.length >= 4) return;\r\n    const id = Math.random().toString(36).slice(2,9);\r\n    const sec: DatasetSection = { id, status:\"input\", filters:[], options:{} };\r\n    setSections(prev => [sec, ...prev]);\r\n    setIsEditing(true);\r\n    setAppStarted(true);\r\n  }\r\n\r\n  /* Choose suggestion → apply to latest input dataset (or create one) */\r\n  function onChoose(s: SuggestItem){\r\n    // first selection starts the app\r\n    if (!appStarted) { setAppStarted(true); setIsEditing(true); }\r\n\r\n    // close dropdown immediately & clear input\r\n    setOpen(false);\r\n    setSuggestions([]);\r\n    setText(\"\");\r\n    if (inputRef.current) inputRef.current.blur();\r\n\r\n    if (sections.length===0 || !sections[0] || sections[0].status!==\"input\") addDatasetSection();\r\n    setSections(prev => {\r\n      const [head, ...tail] = prev;\r\n      const next = {...head};\r\n      if (s.key===\"planning_zones\"){ next.dataset=\"planning_zones\"; next.intent=\"data\"; next.options={ zoneCode:\"All\" }; }\r\n      else if (s.key===\"pois\"){      next.dataset=\"pois\"; next.intent=\"places\"; next.options={ poiType:\"All\" }; }\r\n      else if (s.key===\"sa2\"){       next.dataset=\"sa2\"; next.intent=\"areas\"; }\r\n      else if (s.key===\"dwell_struct\"){ next.dataset=\"dwell_struct\"; next.intent=\"data\"; next.options={ year:2021, category:\"Separate_house\" }; }\r\n      next.status = \"input\";\r\n      return [next, ...tail];\r\n    });\r\n  }\r\n\r\n  /* Dataset option handlers */\r\n  function onZoneChange(idx:number, val:string){\r\n    setSections(prev => prev.map((s,i)=>{\r\n      if(i!==idx) return s;\r\n      const filters = s.filters.filter(f=>f.field!==\"ZONE_CODE\");\r\n      if (val && val!==\"All\") filters.push({ field:\"ZONE_CODE\", op:\"=\", value:val });\r\n      return {...s, filters, options:{...s.options, zoneCode:val}};\r\n    }));\r\n  }\r\n  function onPoiTypeChange(idx:number, val:string){\r\n    setSections(prev => prev.map((s,i)=>{\r\n      if(i!==idx) return s;\r\n      const filters = s.filters.filter(f=>f.field!==\"FTYPE\");\r\n      if (val && val!==\"All\") filters.push({ field:\"FTYPE\", op:\"=\", value:val });\r\n      return {...s, filters, options:{...s.options, poiType:val}};\r\n    }));\r\n  }\r\n\r\n  /* Switch dataset via pill dropdown */\r\n  function switchDataset(idx:number, key:DatasetKey){\r\n    setSections(prev => prev.map((s,i)=>{\r\n      if(i!==idx) return s;\r\n      const base: DatasetSection = { ...s, dataset:key, filters:[], _fc: undefined, status:\"input\" };\r\n      if (key===\"planning_zones\") base.options = { zoneCode:\"All\" };\r\n      else if (key===\"pois\")      base.options = { poiType:\"All\" };\r\n      else if (key===\"dwell_struct\") base.options = { year:2021, category:\"Separate_house\" };\r\n      else base.options = {};\r\n      return base;\r\n    }));\r\n    setIsEditing(true);\r\n    setAppStarted(true);\r\n  }\r\n\r\n  /* Delete dataset tab */\r\n  function deleteSection(idx:number){\r\n    setSections(prev => prev.filter((_,i)=>i!==idx));\r\n  }\r\n\r\n  /* Global Done → verify location + all datasets with minimum requirements */\r\n  function onDone() {\r\n    const locOk = location.mode === \"address\" || location.mode === \"area\" || location.mode === \"within\";\r\n    setLocation(prev => ({ ...prev, status: locOk ? \"verified\" : \"input\" }));\r\n    setSections(prev => prev.map(s => ({ ...s, status: s.dataset ? \"verified\" : \"input\" })));\r\n    const willBeAllVerified = sections.length>0 && sections.every(s => !!s.dataset);\r\n    if (locOk && willBeAllVerified) setIsEditing(false);\r\n  }\r\n  function onEdit() {\r\n    setIsEditing(true);\r\n  }\r\n\r\n  /* Show Data: fetch ALL verified datasets */\r\n  async function onShowData(){\r\n    const ready = sections.filter(s => s.status===\"verified\" && s.dataset);\r\n    if (ready.length===0 || location.status!==\"verified\") return;\r\n    setSections(prev => prev.map(s => ({ ...s, status: s.status===\"verified\" ? \"searching\" : s.status })));\r\n    try {\r\n      const results: Record<string, GeoJSON.FeatureCollection> = {};\r\n      for (const s of ready) {\r\n        const q:any = { dataset: s.dataset, filters: s.filters };\r\n        if (s.dataset===\"dwell_struct\") { q.time = s.options?.year ?? 2021; q.category = s.options?.category ?? \"Separate_house\"; }\r\n        const fc = await fetchGeoJSON(q);\r\n        results[s.id] = fc;\r\n      }\r\n      setSections(prev => prev.map(s => ({ ...s, _fc: results[s.id] ?? s._fc })));\r\n      setPanelOpen(false); // collapse to summary\r\n    } finally {\r\n      setSections(prev => prev.map(s => ({ ...s, status: s.status===\"searching\" ? \"verified\" : s.status })));\r\n    }\r\n  }\r\n\r\n  /* Suggest open/close */\r\n  const onBlurClose = () => setTimeout(()=>setOpen(false),110);\r\n  const onFocusOpen = () => { if (text.trim() && panelOpen) setOpen(true); };\r\n\r\n  /* Dataset chooser pill (dropdown) */\r\n  function DatasetChooser({idx, current}:{idx:number; current?:DatasetKey}) {\r\n    const [show, setShow] = useState(false);\r\n    const items: {key:DatasetKey; label:string}[] = [\r\n      { key:\"planning_zones\", label:\"Planning Zones\" },\r\n      { key:\"pois\", label:\"POIs\" },\r\n      { key:\"sa2\", label:\"SA2 Boundaries\" },\r\n      { key:\"dwell_struct\", label:\"Dwelling Structure\" },\r\n    ];\r\n    const currentLabel = items.find(i=>i.key===current)?.label || \"Choose Dataset\";\r\n    return (\r\n      <div className=\"relative inline-block\">\r\n        <Pill active className=\"border-[var(--clr-primary)] text-[var(--clr-primary)]\" onClick={()=>setShow(s=>!s)}>\r\n          {currentLabel}\r\n        </Pill>\r\n        {show && (\r\n          <div className=\"absolute z-30 mt-2 bg-white border rounded-xl shadow-xl min-w-[220px] p-1\">\r\n            {items.map(it => (\r\n              <button key={it.key}\r\n                className={`w-full text-left px-3 py-2 rounded-lg hover:bg-gray-50 ${it.key===current ? \"bg-gray-100\" : \"\"}`}\r\n                onClick={()=>{ switchDataset(idx, it.key); setShow(false); }}>\r\n                {it.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /* Header title: “Search” while typing; otherwise “Showing” after first selection */\r\n  const headerTitle = (appStarted && text.trim()===\"\") ? \"Showing\" : \"Search\";\r\n\r\n  /* Search row (welcome + edit) */\r\n  const SearchRow = (\r\n    <div className=\"relative\">\r\n      <input\r\n        ref={inputRef}\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Search datasets, places, or areas…\"\r\n        className=\"w-full border rounded-xl px-4 py-3 outline-none shadow-sm bg-white\"\r\n        onFocus={onFocusOpen}\r\n        onBlur={onBlurClose}\r\n      />\r\n      {open && suggestions.length>0 && (\r\n        <div className=\"absolute z-20 left-0 right-0 top-full mt-2 bg-white border rounded-xl shadow-xl max-h-64 overflow-auto\">\r\n          {suggestions.map((s, i) => (\r\n            <button key={s.key + i}\r\n              className=\"w-full px-3 py-2 flex items-center gap-2 hover:bg-gray-50 text-left\"\r\n              onMouseDown={(e)=>e.preventDefault()}\r\n              onClick={()=>onChoose(s)}\r\n            >\r\n              <TagPill tag={s.tag} />\r\n              <span className=\"truncate\">{s.label}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  /* Summary sentence when panel collapsed */\r\n  const SummaryBar = !panelOpen ? (\r\n    <div className=\"absolute left-1/2 -translate-x-1/2\" style={{ top: 20, width: \"min(940px, 88vw)\" }}>\r\n      <div className=\"px-4 py-2 bg-white/95 border rounded-full shadow flex items-center gap-2 justify-center\">\r\n        <span className=\"opacity-80\">Showing:</span>\r\n        {sections.map((s) => {\r\n          const parts: string[] = [];\r\n          if (s.dataset===\"planning_zones\") {\r\n            parts.push(\"Planning zones\");\r\n            if (s.options?.zoneCode && s.options.zoneCode!==\"All\") parts.push(`zone ${s.options.zoneCode}`);\r\n          } else if (s.dataset===\"pois\") {\r\n            parts.push(\"POIs\");\r\n            if (s.options?.poiType && s.options.poiType!==\"All\") parts.push(s.options.poiType);\r\n          } else if (s.dataset===\"sa2\") {\r\n            parts.push(\"SA2 boundaries\");\r\n          } else if (s.dataset===\"dwell_struct\") {\r\n            parts.push(\"Dwelling structure\");\r\n            if (s.options?.category) parts.push(s.options.category.replaceAll(\"_\",\" \"));\r\n            if (s.options?.year) parts.push(String(s.options.year));\r\n          }\r\n          return <Pill key={s.id} active>{parts.join(\", \") || \"Dataset\"}</Pill>;\r\n        })}\r\n        <span className=\"opacity-80\">for Location:</span>\r\n        {location.mode===\"address\" && <Pill active>Address</Pill>}\r\n        {location.mode===\"area\" && <Pill active>Area</Pill>}\r\n        {location.mode===\"within\" && (\r\n          <>\r\n            <Pill active>within</Pill>\r\n            {location.within?.distance_m && <Pill active>{location.within.distance_m} m</Pill>}\r\n            {location.within?.place_type && <Pill active>{location.within.place_type}</Pill>}\r\n          </>\r\n        )}\r\n        <Pill className=\"border-[var(--clr-primary)] text-[var(--clr-primary)]\" onClick={()=>{ setPanelOpen(true); setIsEditing(true); }}>\r\n          Edit Search\r\n        </Pill>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"w-full h-screen relative\">\r\n      {/* Map */}\r\n      <div ref={mapContainer} className=\"absolute inset-0\" style={{ minHeight:\"100vh\" }} />\r\n\r\n      {/* Summary when collapsed */}\r\n      {SummaryBar}\r\n\r\n      {/* Center panel */}\r\n      {panelOpen && (\r\n        <div className=\"absolute left-1/2 -translate-x-1/2\" style={{ top:\"15vh\", width:\"min(940px, 88vw)\" }}>\r\n          <div className=\"bg-white/92 backdrop-blur-sm border rounded-2xl shadow-lg p-4\">\r\n            {/* Welcome state: just the input */}\r\n            {!appStarted && SearchRow}\r\n\r\n            {appStarted && (\r\n              <>\r\n                {/* Header */}\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <div className=\"text-lg font-semibold\">{headerTitle}</div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                      className={`px-3 py-1.5 rounded-lg border ${isEditing ? \"text-white\" : \"\"}`}\r\n                      style={{ background: isEditing ? \"var(--clr-primary)\" : \"white\" }}\r\n                      onClick={()=> isEditing ? onDone() : onEdit()}\r\n                    >\r\n                      {isEditing ? \"Done\" : \"Edit\"}\r\n                    </button>\r\n                    <button\r\n                      disabled={!canShowData}\r\n                      onClick={onShowData}\r\n                      className={`px-4 py-2 rounded-lg text-white ${canShowData ? \"btn-accent hover:opacity-95\" : \"bg-gray-300\"}`}\r\n                    >\r\n                      Show Data\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Keep search bar for adding more while editing */}\r\n                {isEditing && SearchRow}\r\n\r\n                {/* === DATASET TABS (moved above location) === */}\r\n                <div className=\"mt-3 space-y-3\">\r\n                  {sections.map((s, idx) => {\r\n                    const zoneChoices = [\"All\",\"GRZ\",\"NRZ\",\"RGZ\",\"MUZ\"];\r\n                    const poiChoices = [\"All\",\"School\",\"Train Station\",\"Hospital\",\"Supermarket\"];\r\n                    const editingThis = isEditing;\r\n\r\n                    return (\r\n                      <div\r\n                        key={s.id}\r\n                        className={`p-3 border rounded-xl space-y-2 ${editingThis ? \"\" : \"bg-gray-50\"}`}\r\n                        style={ editingThis ? { background: \"rgba(232,96,23,0.25)\" } : undefined }\r\n                      >\r\n                        <div className=\"flex items-center justify-between gap-3\">\r\n                          <div className=\"text-sm flex items-center gap-2 flex-wrap\">\r\n                            <span className=\"opacity-80\">Showing:</span>\r\n\r\n                            {/* Dataset chooser */}\r\n                            <DatasetChooser idx={idx} current={s.dataset} />\r\n\r\n                            {/* Dataset-specific controls */}\r\n                            {s.dataset===\"planning_zones\" && (\r\n                              <DropdownPill\r\n                                label=\"Zone\"\r\n                                value={s.options?.zoneCode ?? \"All\"}\r\n                                items={zoneChoices}\r\n                                onSelect={(v)=>onZoneChange(idx,v)}\r\n                              />\r\n                            )}\r\n                            {s.dataset===\"pois\" && (\r\n                              <DropdownPill\r\n                                label=\"Type\"\r\n                                value={s.options?.poiType ?? \"All\"}\r\n                                items={poiChoices}\r\n                                onSelect={(v)=>onPoiTypeChange(idx,v)}\r\n                              />\r\n                            )}\r\n                            {s.dataset===\"sa2\" && <Pill active>SA2 boundaries</Pill>}\r\n                            {s.dataset===\"dwell_struct\" && (\r\n                              <>\r\n                                <DropdownPill\r\n                                  label=\"Year\"\r\n                                  value={String(s.options?.year ?? 2021)}\r\n                                  items={[\"2011\",\"2016\",\"2021\"]}\r\n                                  onSelect={(v)=>setSections(prev=>prev.map((x,i)=> i!==idx ? x : ({...x, options:{...x.options, year:Number(v)}})))}\r\n                                />\r\n                                <DropdownPill\r\n                                  label=\"Category\"\r\n                                  value={s.options?.category ?? \"Separate_house\"}\r\n                                  items={[\"Separate_house\",\"Semi_detached\",\"Flat_or_apartment\",\"Other_dwelling\",\"Not_stated\"]}\r\n                                  onSelect={(v)=>setSections(prev=>prev.map((x,i)=> i!==idx ? x : ({...x, options:{...x.options, category:v}})))}\r\n                                />\r\n                              </>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <StatusDot status={s.status} />\r\n                            <button\r\n                              aria-label=\"Delete\"\r\n                              title=\"Delete\"\r\n                              className=\"w-6 h-6 rounded hover:bg-gray-100 text-gray-700 flex items-center justify-center\"\r\n                              onClick={()=>deleteSection(idx)}\r\n                              disabled={!isEditing}\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Add dataset (beneath tabs; hidden when not editing) */}\r\n                {isEditing && (\r\n                  <div className=\"mt-3\">\r\n                    <button\r\n                      disabled={sections.length>=4}\r\n                      className={`w-full py-3 border rounded-xl text-sm ${sections.length>=4 ? \"text-gray-400 bg-gray-100 cursor-not-allowed\" : \"text-gray-600 hover:bg-gray-50\"}`}\r\n                      onClick={addDatasetSection}\r\n                    >\r\n                      {sections.length>=4 ? \"Limit Reached\" : \"+ Add dataset\"}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                {/* === LOCATION ROW (moved below datasets, tinted feature blue 30%) === */}\r\n                <div\r\n                  className=\"mt-3 p-3 border rounded-xl\"\r\n                  style={{ background: \"rgba(14,26,117,0.30)\" }}\r\n                >\r\n                  <div className=\"flex items-center justify-between gap-3\">\r\n                    <div className=\"text-sm flex items-center gap-2 flex-wrap\">\r\n                      <span className=\"opacity-90\">For Location:</span>\r\n                      {isEditing ? (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Pill active={location.mode===\"address\"} onClick={()=>setLocation(l=>({...l, mode:\"address\", status:\"input\"}))}>Address</Pill>\r\n                          <Pill active={location.mode===\"area\"} onClick={()=>setLocation(l=>({...l, mode:\"area\", status:\"input\"}))}>Area</Pill>\r\n                          <Pill active={location.mode===\"within\"} onClick={()=>setLocation(l=>({...l, mode:\"within\", status:\"input\"}))}>within</Pill>\r\n                          {location.mode===\"address\" && (\r\n                            <input className=\"text-sm border rounded px-2 py-1 bg-white\" placeholder=\"Type an address (stub)\" />\r\n                          )}\r\n                          {location.mode===\"area\" && (\r\n                            <input className=\"text-sm border rounded px-2 py-1 bg-white\" placeholder=\"Type an area (SA2/LGA) (stub)\" />\r\n                          )}\r\n                          {location.mode===\"within\" && (\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <DropdownPill\r\n                                label=\"within\"\r\n                                value={String(location.within?.distance_m ?? 500) + \" m\"}\r\n                                items={[\"250 m\",\"500 m\",\"1000 m\",\"2000 m\"]}\r\n                                onSelect={(v)=>{\r\n                                  const dist = Number(v.split(\" \")[0]);\r\n                                  setLocation(l=>({...l, within:{ distance_m:dist, place_type:l.within?.place_type ?? \"Any place\" }, status:\"input\"}));\r\n                                }}\r\n                              />\r\n                              <DropdownPill\r\n                                value={location.within?.place_type ?? \"Any place\"}\r\n                                items={[\"Any place\",\"School\",\"Train Station\",\"Hospital\",\"Supermarket\"]}\r\n                                onSelect={(v)=>{\r\n                                  setLocation(l=>({...l, within:{ distance_m:l.within?.distance_m ?? 500, place_type:v }, status:\"input\"}));\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          {location.mode===\"address\" && <Pill active>Address</Pill>}\r\n                          {location.mode===\"area\" && <Pill active>Area</Pill>}\r\n                          {location.mode===\"within\" && (\r\n                            <>\r\n                              <Pill active>within</Pill>\r\n                              {location.within?.distance_m && <Pill active>{location.within.distance_m} m</Pill>}\r\n                              {location.within?.place_type && <Pill active>{location.within.place_type}</Pill>}\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <StatusDot status={location.status} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mccar/PROJECTS/2400%20ECHO%20APP/echoapp/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport MapApp from '../components/MapApp';\r\n\r\nexport default function Page() {\r\n  return <MapApp />;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,6LAAC,sJAAM;;;;;AAChB;KAFwB","debugId":null}}]
}