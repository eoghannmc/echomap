{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mccar/PROJECTS/2400%20ECHO%20APP/echoapp/frontend/src/components/MapApp.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport maplibregl, { Map as MLMap } from 'maplibre-gl';\r\n\r\n// (… keep the rest of your code exactly as you had it …)\r\n// Export ONE default:\r\nexport default function MapApp() {\r\n  // your existing component body from page.tsx\r\n}\r\n\r\n\r\n'use client';\r\n\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport maplibregl, { Map as MLMap, GeoJSONSource } from 'maplibre-gl';\r\n\r\ntype Operator = \"AND\" | \"OR\" | \"<\" | \">\" | \"=\" | \"BETWEEN\" | \"WITHIN\" | \"IN\";\r\ntype Intent = \"address\" | \"multi\" | \"places\" | \"areas\" | \"data\";\r\n\r\ninterface Filter {\r\n  field: string;\r\n  op: Operator;\r\n  value?: number | string | [number, number] | string[];\r\n  combine?: \"AND\" | \"OR\";\r\n}\r\n\r\ninterface QueryObject {\r\n  intent: Intent;\r\n  dataset?: string;\r\n  filters?: Filter[];\r\n  time?: number | string;\r\n  category?: string;\r\n  area_type?: \"SA2\" | \"LGA\" | \"Postcode\" | \"Suburb\";\r\n}\r\n\r\ntype SuggestItem = { key: string; tag: \"Data\" | \"Places\" | \"Areas\" | \"Address\" | \"Multi\"; label: string };\r\n\r\n// ---- tiny suggest fetcher ----\r\nasync function fetchSuggest(q: string): Promise<SuggestItem[]> {\r\n  const url = `/api/suggest?q=${encodeURIComponent(q)}`;\r\n  const res = await fetch(url);\r\n  if (!res.ok) return [];\r\n  const json = await res.json();\r\n  return json.suggestions ?? [];\r\n}\r\n\r\n// ---- run query → GeoJSON ----\r\nasync function fetchGeoJSON(query: QueryObject): Promise<GeoJSON.FeatureCollection> {\r\n  const res = await fetch(`/api/compile-run`, {\r\n    method: 'POST',\r\n    headers: { 'content-type': 'application/json' },\r\n    body: JSON.stringify(query),\r\n  });\r\n  if (!res.ok) throw new Error('compile-run failed');\r\n  return await res.json();\r\n}\r\nexport default function Home() {\r\n  return (\r\n    <div style={{ padding: 24 }}>\r\n      <h1>EchoApp</h1>\r\n      <p>If you see this, the Next.js app is running.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Page() {\r\n  // search input state\r\n  const [text, setText] = useState('');\r\n  const [suggestions, setSuggestions] = useState<SuggestItem[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // confirmation / query\r\n  const [query, setQuery] = useState<QueryObject | null>(null);\r\n  const [geojson, setGeojson] = useState<GeoJSON.FeatureCollection | null>(null);\r\n  const [busy, setBusy] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // map\r\n  const mapRef = useRef<MLMap | null>(null);\r\n  const mapContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n  // debounced suggest\r\n  useEffect(() => {\r\n    let alive = true;\r\n    const t = setTimeout(async () => {\r\n      try {\r\n        if (!text.trim()) {\r\n          setSuggestions([]);\r\n          setOpen(false);\r\n          return;\r\n        }\r\n        const s = await fetchSuggest(text.trim());\r\n        if (alive) {\r\n          setSuggestions(s.slice(0, 4)); // show max 4; scroll can be added later\r\n          setOpen(true);\r\n        }\r\n      } catch {\r\n        if (alive) setSuggestions([]);\r\n      }\r\n    }, 180);\r\n    return () => { alive = false; clearTimeout(t); };\r\n  }, [text]);\r\n\r\n  // init map once\r\n  useEffect(() => {\r\n    if (mapRef.current || !mapContainer.current) return;\r\n    const map = new maplibregl.Map({\r\n      container: mapContainer.current,\r\n      style: {\r\n        version: 8,\r\n        sources: {\r\n          osm: {\r\n            type: 'raster',\r\n            tiles: ['https://tile.openstreetmap.org/{z}/{x}/{y}.png'],\r\n            tileSize: 256,\r\n          } as any,\r\n        },\r\n        layers: [{ id: 'osm', type: 'raster', source: 'osm' }],\r\n      } as any,\r\n      center: [144.9631, -37.8136], // Melbourne\r\n      zoom: 9,\r\n      attributionControl: true,\r\n    });\r\n    map.addControl(new maplibregl.NavigationControl({ visualizePitch: true }), 'top-right');\r\n    mapRef.current = map;\r\n    return () => { map.remove(); mapRef.current = null; };\r\n  }, []);\r\n\r\n  // draw geojson when available\r\n  useEffect(() => {\r\n    const map = mapRef.current;\r\n    if (!map || !geojson) return;\r\n\r\n    const srcId = 'query-src';\r\n    const polyLayer = 'query-poly';\r\n    const lineLayer = 'query-line';\r\n    const pointLayer = 'query-point';\r\n\r\n    // remove previous\r\n    [polyLayer, lineLayer, pointLayer].forEach(l => map.getLayer(l) && map.removeLayer(l));\r\n    if (map.getSource(srcId)) map.removeSource(srcId);\r\n\r\n    // add new source\r\n    map.addSource(srcId, { type: 'geojson', data: geojson } as any);\r\n\r\n    // naive layer add: polygons, lines, points\r\n    map.addLayer({\r\n      id: polyLayer, type: 'fill', source: srcId,\r\n      paint: { 'fill-color': '#3b82f6', 'fill-opacity': 0.35 }\r\n    }, 'osm');\r\n    map.addLayer({\r\n      id: lineLayer, type: 'line', source: srcId,\r\n      paint: { 'line-color': '#1f2937', 'line-width': 1.5 }\r\n    });\r\n    map.addLayer({\r\n      id: pointLayer, type: 'circle', source: srcId,\r\n      paint: { 'circle-radius': 5, 'circle-color': '#111827' }\r\n    });\r\n\r\n    // fit bounds\r\n    const bbox = turfBbox(geojson);\r\n    if (bbox) map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], { padding: 40, maxZoom: 12 });\r\n  }, [geojson]);\r\n\r\n  // keep it dependency-free: tiny bbox helper (no turf dependency)\r\n  function turfBbox(fc: GeoJSON.FeatureCollection): [number, number, number, number] | null {\r\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n    const visit = (coords: any) => Array.isArray(coords[0])\r\n      ? coords.forEach(visit)\r\n      : ([minX, minY] = [Math.min(minX, coords[0]), Math.min(minY, coords[1])],\r\n         [maxX, maxY] = [Math.max(maxX, coords[0]), Math.max(maxY, coords[1])]);\r\n    try {\r\n      for (const f of fc.features) {\r\n        const g = f.geometry;\r\n        if (!g) continue;\r\n        if (g.type === 'Point') visit(g.coordinates);\r\n        else if (g.type === 'MultiPoint' || g.type === 'LineString') visit(g.coordinates);\r\n        else visit((g as any).coordinates);\r\n      }\r\n      if (minX === Infinity) return null;\r\n      return [minX, minY, maxX, maxY];\r\n    } catch { return null; }\r\n  }\r\n\r\n  // choose a suggestion → build a minimal query\r\n  const onChoose = (s: SuggestItem) => {\r\n    setOpen(false);\r\n    setText(s.label);\r\n    // Minimal mapping for our 4 live-wired datasets:\r\n    if (s.key === 'planning_zones') setQuery({ intent: 'data', dataset: 'planning_zones' });\r\n    else if (s.key === 'pois')      setQuery({ intent: 'places', dataset: 'pois' });\r\n    else if (s.key === 'sa2')       setQuery({ intent: 'areas', dataset: 'sa2' });\r\n    else if (s.key === 'dwell_struct') setQuery({ intent: 'data', dataset: 'dwell_struct', time: 2021, category: 'Separate_house', area_type: 'SA2' });\r\n  };\r\n\r\n  const isValid = useMemo(() => {\r\n    if (!query) return false;\r\n    if (query.dataset === 'dwell_struct') return !!query.time && !!query.category;\r\n    return !!query.dataset;\r\n  }, [query]);\r\n\r\n  const onRun = async () => {\r\n    if (!query) return;\r\n    setBusy(true); setError(null);\r\n    try {\r\n      const fc = await fetchGeoJSON(query);\r\n      setGeojson(fc);\r\n    } catch (e: any) {\r\n      setError(e?.message ?? 'Failed');\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col\">\r\n      {/* Top bar */}\r\n      <div className=\"p-3 border-b bg-white\">\r\n        <div className=\"max-w-5xl mx-auto\">\r\n          <div className=\"relative\">\r\n            <input\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              placeholder=\"Search datasets, places, or areas…\"\r\n              className=\"w-full border rounded-xl px-4 py-3 outline-none shadow-sm\"\r\n              onFocus={() => text && setOpen(true)}\r\n            />\r\n            {open && suggestions.length > 0 && (\r\n              <div className=\"absolute z-10 mt-2 w-full bg-white border rounded-xl shadow-lg max-h-56 overflow-auto\">\r\n                {suggestions.map((s, i) => (\r\n                  <button\r\n                    key={s.key + i}\r\n                    className=\"w-full px-3 py-2 flex items-center gap-2 hover:bg-gray-50 text-left\"\r\n                    onClick={() => onChoose(s)}\r\n                  >\r\n                    <span className=\"text-xs px-2 py-0.5 rounded-full border bg-gray-100\">{s.tag}</span>\r\n                    <span className=\"truncate\">{s.label}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Confirmation strip */}\r\n          {query && (\r\n            <div className=\"mt-3 p-3 border rounded-xl bg-gray-50 flex items-center justify-between gap-3\">\r\n              <div className=\"text-sm\">\r\n                {query.dataset === 'planning_zones' && <>Showing <b>Planning Zones</b></>}\r\n                {query.dataset === 'pois' && <>Showing <b>POIs</b> (by category)</>}\r\n                {query.dataset === 'sa2' && <>Showing <b>SA2 boundaries</b></>}\r\n                {query.dataset === 'dwell_struct' && <>Showing <b>Dwelling structure</b> for <span className=\"px-2 py-0.5 bg-white border rounded\">Category: {query.category}</span> in <span className=\"px-2 py-0.5 bg-white border rounded\">Year: {String(query.time)}</span></>}\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <button\r\n                  className=\"px-3 py-2 rounded-lg border bg-white\"\r\n                  onClick={() => { setQuery(null); setGeojson(null); setText(''); setOpen(false); }}\r\n                >Edit</button>\r\n                <button\r\n                  disabled={!isValid || busy}\r\n                  onClick={onRun}\r\n                  className={`px-4 py-2 rounded-lg text-white ${(!isValid || busy) ? 'bg-gray-300' : 'bg-blue-600 hover:bg-blue-700'}`}\r\n                >\r\n                  {busy ? 'Running…' : 'Search'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {error && <div className=\"mt-2 text-sm text-red-600\">{error}</div>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Map */}\r\n      <div className=\"flex-1\">\r\n        <div ref={mapContainer} style={{ width: '100%', height: '100%' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}