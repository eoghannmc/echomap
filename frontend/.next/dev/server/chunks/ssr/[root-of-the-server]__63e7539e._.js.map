{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mccar/PROJECTS/2400%20ECHO%20APP/echoapp/frontend/src/lib/suggest.ts"],"sourcesContent":["export type Tag = \"Data\" | \"Places\" | \"Areas\" | \"Address\" | \"Multi\";\r\nexport type SuggestItem = { key: string; tag: Tag; label: string };\r\n\r\nconst API = process.env.NEXT_PUBLIC_API_BASE || \"\";\r\n\r\n// Keep one controller per call-site to cancel stale requests\r\nlet ctrlMain: AbortController | null = null;\r\nlet ctrlLoc: AbortController | null = null;\r\n\r\nexport async function fetchMergedSuggestions(q: string): Promise<SuggestItem[]> {\r\n  if (ctrlMain) ctrlMain.abort();\r\n  ctrlMain = new AbortController();\r\n  const signal = ctrlMain.signal;\r\n\r\n  const wantAddr = q.trim().length >= 3;\r\n  const wantNonAddr = q.trim().length >= 2;\r\n\r\n  const [addrRes, genericRes] = await Promise.all([\r\n    wantAddr\r\n      ? fetch(`${API}/api/address-suggest?q=${encodeURIComponent(q)}`, { signal }).then(r => r.ok ? r.json() : { suggestions: [] })\r\n      : Promise.resolve({ suggestions: [] }),\r\n    wantNonAddr\r\n      ? fetch(`${API}/api/suggest?q=${encodeURIComponent(q)}`, { signal }).then(r => r.ok ? r.json() : { suggestions: [] })\r\n      : Promise.resolve({ suggestions: [] }),\r\n  ]);\r\n\r\n  const addresses: SuggestItem[] = (addrRes?.suggestions ?? []).slice(0, 3);\r\n  const rest: SuggestItem[] = (genericRes?.suggestions ?? []).filter((s: SuggestItem) => s.tag !== \"Address\");\r\n\r\n  const spaceLeft = Math.max(0, 4 - addresses.length);\r\n  const nonAddrPicks = rest.slice(0, spaceLeft);\r\n  return [...addresses, ...nonAddrPicks];\r\n}\r\n\r\nexport async function fetchAddressOnly(q: string): Promise<SuggestItem[]> {\r\n  if (ctrlLoc) ctrlLoc.abort();\r\n  ctrlLoc = new AbortController();\r\n  const signal = ctrlLoc.signal;\r\n\r\n  if (q.trim().length < 3) return [];\r\n  const r = await fetch(`${API}/api/address-suggest?q=${encodeURIComponent(q)}`, { signal });\r\n  const data = r.ok ? await r.json() : { suggestions: [] };\r\n  return (data?.suggestions ?? []).slice(0, 3);\r\n}\r\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,MAAM,QAAQ,GAAG,CAAC,oBAAoB,IAAI;AAEhD,6DAA6D;AAC7D,IAAI,WAAmC;AACvC,IAAI,UAAkC;AAE/B,eAAe,uBAAuB,CAAS;IACpD,IAAI,UAAU,SAAS,KAAK;IAC5B,WAAW,IAAI;IACf,MAAM,SAAS,SAAS,MAAM;IAE9B,MAAM,WAAW,EAAE,IAAI,GAAG,MAAM,IAAI;IACpC,MAAM,cAAc,EAAE,IAAI,GAAG,MAAM,IAAI;IAEvC,MAAM,CAAC,SAAS,WAAW,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC9C,WACI,MAAM,GAAG,IAAI,uBAAuB,EAAE,mBAAmB,IAAI,EAAE;YAAE;QAAO,GAAG,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,GAAG,EAAE,IAAI,KAAK;gBAAE,aAAa,EAAE;YAAC,KACzH,QAAQ,OAAO,CAAC;YAAE,aAAa,EAAE;QAAC;QACtC,cACI,MAAM,GAAG,IAAI,eAAe,EAAE,mBAAmB,IAAI,EAAE;YAAE;QAAO,GAAG,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,GAAG,EAAE,IAAI,KAAK;gBAAE,aAAa,EAAE;YAAC,KACjH,QAAQ,OAAO,CAAC;YAAE,aAAa,EAAE;QAAC;KACvC;IAED,MAAM,YAA2B,CAAC,SAAS,eAAe,EAAE,EAAE,KAAK,CAAC,GAAG;IACvE,MAAM,OAAsB,CAAC,YAAY,eAAe,EAAE,EAAE,MAAM,CAAC,CAAC,IAAmB,EAAE,GAAG,KAAK;IAEjG,MAAM,YAAY,KAAK,GAAG,CAAC,GAAG,IAAI,UAAU,MAAM;IAClD,MAAM,eAAe,KAAK,KAAK,CAAC,GAAG;IACnC,OAAO;WAAI;WAAc;KAAa;AACxC;AAEO,eAAe,iBAAiB,CAAS;IAC9C,IAAI,SAAS,QAAQ,KAAK;IAC1B,UAAU,IAAI;IACd,MAAM,SAAS,QAAQ,MAAM;IAE7B,IAAI,EAAE,IAAI,GAAG,MAAM,GAAG,GAAG,OAAO,EAAE;IAClC,MAAM,IAAI,MAAM,MAAM,GAAG,IAAI,uBAAuB,EAAE,mBAAmB,IAAI,EAAE;QAAE;IAAO;IACxF,MAAM,OAAO,EAAE,EAAE,GAAG,MAAM,EAAE,IAAI,KAAK;QAAE,aAAa,EAAE;IAAC;IACvD,OAAO,CAAC,MAAM,eAAe,EAAE,EAAE,KAAK,CAAC,GAAG;AAC5C","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mccar/PROJECTS/2400%20ECHO%20APP/echoapp/frontend/src/components/MapApp.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport maplibregl, { Map as MLMap, GeoJSONSource } from \"maplibre-gl\";\r\nimport { fetchMergedSuggestions, fetchAddressOnly, SuggestItem } from \"../lib/suggest\";\r\n\r\n/* ===================== Types ===================== */\r\ntype Operator = \"AND\" | \"OR\" | \"<\" | \">\" | \"=\" | \"BETWEEN\" | \"WITHIN\" | \"IN\";\r\ntype Intent = \"address\" | \"multi\" | \"places\" | \"areas\" | \"data\";\r\ntype Tag = \"Data\" | \"Places\" | \"Areas\" | \"Address\" | \"Multi\";\r\n\r\ntype SectionStatus = \"input\" | \"searching\" | \"verified\" | \"error\";\r\ntype DatasetKey = \"planning_zones\" | \"pois\" | \"sa2\" | \"dwell_struct\";\r\n\r\ninterface Filter {\r\n  field: string;\r\n  op: Operator;\r\n  value?: number | string | [number, number] | string[];\r\n}\r\n\r\ninterface ForLocation {\r\n  mode: \"address\" | \"area\" | \"within\";\r\n  address?: string;\r\n  area?: string;\r\n  within?: { distance_m: number; place_type?: string; text?: string };\r\n  status: SectionStatus;\r\n}\r\n\r\ninterface DatasetSection {\r\n  id: string;\r\n  status: SectionStatus;\r\n  dataset?: DatasetKey;\r\n  intent?: Intent;\r\n  filters: Filter[];\r\n  options?: {\r\n    zoneCode?: string;\r\n    poiType?: string;\r\n    year?: number;\r\n    category?: string;\r\n  };\r\n  _fc?: GeoJSON.FeatureCollection;\r\n}\r\n\r\n/* ===================== Small UI helpers ===================== */\r\nconst tagClass: Record<Tag, string> = {\r\n  Data: \"bg-[var(--pill-data)] text-white\",\r\n  Places: \"bg-[var(--pill-places)] text-black\",\r\n  Areas: \"bg-[var(--pill-areas)] text-white\",\r\n  Address: \"bg-[var(--pill-gray)] text-black\",\r\n  Multi: \"bg-[var(--pill-multi)] text-white\",\r\n};\r\n\r\nfunction TagPill({tag}:{tag:Tag}) {\r\n  return <span className={`text-xs px-2 py-0.5 rounded-full border border-black/10 ${tagClass[tag]}`}>{tag}</span>;\r\n}\r\n\r\nfunction Pill({\r\n  active,\r\n  children,\r\n  onClick,\r\n  className = \"\",\r\n}: {\r\n  active?: boolean;\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`text-xs px-2.5 py-1 rounded-full border transition ${active ? \"bg-[var(--clr-bg-light)]\" : \"bg-white hover:bg-gray-50\"} ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction DropdownPill({\r\n  label,\r\n  value,\r\n  items,\r\n  onSelect,\r\n  className = \"\",\r\n}: {\r\n  label?: string;\r\n  value: string;\r\n  items: string[];\r\n  onSelect: (v: string) => void;\r\n  className?: string;\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className=\"relative inline-block\">\r\n      <button\r\n        className={`text-xs px-2.5 py-1 rounded-full border bg-white hover:bg-gray-50 flex items-center gap-1 ${className}`}\r\n        onClick={() => setOpen((o) => !o)}\r\n      >\r\n        {label ? <span className=\"opacity-70\">{label}:</span> : null}\r\n        <span className=\"font-medium\">{value}</span>\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 20 20\" className=\"opacity-60\">\r\n          <path d=\"M5 7l5 5 5-5\" fill=\"currentColor\" />\r\n        </svg>\r\n      </button>\r\n      {open && (\r\n        <div className=\"absolute z-30 mt-2 bg-white border rounded-xl shadow-xl min-w-[200px] p-1\">\r\n          {items.map((opt) => (\r\n            <button\r\n              key={opt}\r\n              className={`w-full text-left px-3 py-2 rounded-lg hover:bg-gray-50 ${opt===value ? \"bg-gray-100\" : \"\"}`}\r\n              onClick={() => { onSelect(opt); setOpen(false); }}\r\n            >\r\n              {opt}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StatusDot({status}:{status:SectionStatus}) {\r\n  const color = status===\"verified\" ? \"bg-green-500\"\r\n              : status===\"searching\" ? \"bg-blue-500\"\r\n              : status===\"error\" ? \"bg-red-500\"\r\n              : \"bg-gray-400\";\r\n  return <span className={`inline-block w-2.5 h-2.5 rounded-full ${color}`} title={status} />;\r\n}\r\n\r\n/* ===================== Utilities ===================== */\r\nfunction bboxOf(fc: GeoJSON.FeatureCollection): [number, number, number, number] | null {\r\n  let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n  const visit = (c: any) => Array.isArray(c[0]) ? c.forEach(visit)\r\n    : ([minX, minY] = [Math.min(minX, c[0]), Math.min(minY, c[1])],\r\n       [maxX, maxY] = [Math.max(maxX, c[0]), Math.max(maxY, c[1])]);\r\n  try {\r\n    for (const f of fc.features) {\r\n      const g = f.geometry; if (!g) continue;\r\n      if (g.type === \"Point\") visit(g.coordinates);\r\n      else if (g.type === \"MultiPoint\" || g.type === \"LineString\") visit((g as any).coordinates);\r\n      else visit((g as any).coordinates);\r\n    }\r\n    if (minX === Infinity) return null;\r\n    return [minX, minY, maxX, maxY];\r\n  } catch { return null; }\r\n}\r\n\r\nasync function fetchGeoJSON(query: any): Promise<GeoJSON.FeatureCollection> {\r\n  const res = await fetch(`/api/compile-run`, {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(query),\r\n  });\r\n  if (!res.ok) throw new Error(`compile-run failed (${res.status})`);\r\n  return await res.json();\r\n}\r\n\r\n/* ===================== Main Component ===================== */\r\nexport default function MapApp() {\r\n  /* App start: welcome vs. active */\r\n  const [appStarted, setAppStarted] = useState(false);\r\n\r\n  /* Hide/show panel (summary vs. editor) */\r\n  const [panelOpen, setPanelOpen] = useState(true);\r\n\r\n  /* Global Edit/Done for entire panel */\r\n  const [isEditing, setIsEditing] = useState(true);\r\n\r\n  /* Only show search bar during edit when actively adding a dataset */\r\n  const [addingDataset, setAddingDataset] = useState(false);\r\n\r\n  /* Global Location (separate from datasets) */\r\n  const [location, setLocation] = useState<ForLocation>({\r\n    mode: \"area\", status: \"input\"\r\n  });\r\n\r\n  /* Dataset sections (1–4) */\r\n  const [sections, setSections] = useState<DatasetSection[]>([]);\r\n\r\n  /* Searchbar + suggestions (main) */\r\n  const [text, setText] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<SuggestItem[]>([]);\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  /* Location (Address mode) input + suggestions */\r\n  const [locAddrText, setLocAddrText] = useState(\"\");\r\n  const [locAddrOpen, setLocAddrOpen] = useState(false);\r\n  const [locAddrSuggestions, setLocAddrSuggestions] = useState<SuggestItem[]>([]);\r\n  const locAddrInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  /* Derived flags */\r\n  const allDatasetsVerified = sections.length>0 && sections.every(s => s.status===\"verified\");\r\n  const locationVerified = location.status===\"verified\";\r\n  const canShowData = appStarted && !isEditing && panelOpen && allDatasetsVerified && locationVerified;\r\n\r\n  /* Map */\r\n  const mapRef = useRef<MLMap | null>(null);\r\n  const mapReady = useRef(false);\r\n  const mapContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n  /* ===== Suggest (main) – keep open for >=2 chars, addresses join >=3; Abort handled in helper ===== */\r\n  useEffect(() => {\r\n    let alive = true;\r\n    const t = setTimeout(async () => {\r\n      try {\r\n        const q = text.trim();\r\n        if (q.length >= 2 && panelOpen) setOpen(true);\r\n        else { setOpen(false); setSuggestions([]); return; }\r\n\r\n        const raw = await fetchMergedSuggestions(q);\r\n        if (alive) {\r\n          setSuggestions(raw);\r\n          setOpen(q.length >= 2 && raw.length > 0);\r\n        }\r\n      } catch {\r\n        if (alive) { setSuggestions([]); setOpen(false); }\r\n      }\r\n    }, 80);\r\n    return () => { alive = false; clearTimeout(t); };\r\n  }, [text, panelOpen]);\r\n\r\n  /* ===== Suggest (Location > Address only) ===== */\r\n  useEffect(() => {\r\n    let alive = true;\r\n    if (location.mode !== \"address\" || !isEditing) { setLocAddrSuggestions([]); setLocAddrOpen(false); return; }\r\n    const t = setTimeout(async () => {\r\n      try {\r\n        const q = locAddrText.trim();\r\n        if (q.length >= 3) setLocAddrOpen(true); else { setLocAddrOpen(false); setLocAddrSuggestions([]); return; }\r\n        const items = await fetchAddressOnly(q);\r\n        if (alive) {\r\n          setLocAddrSuggestions(items);\r\n          setLocAddrOpen(q.length >= 3 && items.length > 0);\r\n        }\r\n      } catch {\r\n        if (alive) { setLocAddrSuggestions([]); setLocAddrOpen(false); }\r\n      }\r\n    }, 100);\r\n    return () => { alive = false; clearTimeout(t); };\r\n  }, [locAddrText, location.mode, isEditing]);\r\n\r\n  /* Map init (Positron) */\r\n  useEffect(() => {\r\n    if (mapRef.current || !mapContainer.current) return;\r\n    const map = new maplibregl.Map({\r\n      container: mapContainer.current!,\r\n      style: {\r\n        version: 8,\r\n        sources: {\r\n          positron: {\r\n            type: \"raster\",\r\n            tiles: [\"https://basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"],\r\n            tileSize: 256,\r\n            attribution:\r\n              '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OSM</a> ' +\r\n              '&copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\r\n          } as any,\r\n        },\r\n        layers: [{ id: \"positron\", type: \"raster\", source: \"positron\" }],\r\n      } as any,\r\n      center: [144.9631, -37.8136],\r\n      zoom: 10,\r\n      attributionControl: false, // avoid type clash; we add controls below\r\n    });\r\n    map.addControl(new maplibregl.NavigationControl({ visualizePitch: true }), \"top-right\");\r\n    map.addControl(new maplibregl.AttributionControl({ compact: true }), \"bottom-right\");\r\n    map.on(\"load\", () => { mapReady.current = true; map.resize(); });\r\n    const onResize = () => map.resize();\r\n    window.addEventListener(\"resize\", onResize);\r\n    mapRef.current = map;\r\n    return () => { window.removeEventListener(\"resize\", onResize); map.remove(); mapRef.current=null; mapReady.current=false; };\r\n  }, []);\r\n\r\n  /* Draw / update layers per dataset */\r\n  useEffect(() => {\r\n    const map = mapRef.current;\r\n    if (!map || !mapReady.current) return;\r\n\r\n    const boxes: [number,number,number,number][] = [];\r\n    for (const s of sections) {\r\n      const fc = s._fc;\r\n      if (!fc) continue;\r\n      const src = `sec-${s.id}`;\r\n\r\n      const existing = map.getSource(src) as GeoJSONSource | undefined;\r\n      if (existing) existing.setData(fc as any);\r\n      else map.addSource(src, { type: \"geojson\", data: fc } as any);\r\n\r\n      const fillId = `sec-${s.id}-fill`;\r\n      const lineId = `sec-${s.id}-line`;\r\n      const ptId   = `sec-${s.id}-point`;\r\n\r\n      const safeRemove = (id:string) => { if (map.getLayer(id)) map.removeLayer(id); };\r\n\r\n      if (s.dataset===\"planning_zones\" || s.dataset===\"sa2\" || s.dataset===\"dwell_struct\") {\r\n        safeRemove(ptId);\r\n        if (!map.getLayer(fillId)) {\r\n          map.addLayer({ id:fillId, type:\"fill\", source:src, paint:{ \"fill-color\":\"#3b82f6\", \"fill-opacity\":0.35 } }, \"positron\");\r\n        }\r\n        if (!map.getLayer(lineId)) {\r\n          map.addLayer({ id:lineId, type:\"line\", source:src, paint:{ \"line-color\":\"#1f2937\",\"line-width\":1.2 } });\r\n        }\r\n      } else if (s.dataset===\"pois\") {\r\n        safeRemove(fillId); safeRemove(lineId);\r\n        if (!map.getLayer(ptId)) {\r\n          map.addLayer({ id:ptId, type:\"circle\", source:src, paint:{ \"circle-radius\":5, \"circle-color\":\"#111827\" } });\r\n        }\r\n      }\r\n\r\n      const box = bboxOf(fc); if (box) boxes.push(box);\r\n    }\r\n\r\n    if (boxes.length) {\r\n      const union = boxes.reduce((a,b)=>[Math.min(a[0],b[0]), Math.min(a[1],b[1]), Math.max(a[2],b[2]), Math.max(a[3],b[3]) ] as any, [Infinity,Infinity,-Infinity,-Infinity]);\r\n      map.fitBounds([[union[0],union[1]],[union[2],union[3]]], { padding: 40, maxZoom: 12 });\r\n    }\r\n  }, [sections]);\r\n\r\n  /* Add a new empty dataset section (limited to 4) */\r\n  function addDatasetSection() {\r\n    if (sections.length >= 4) return;\r\n    const id = Math.random().toString(36).slice(2,9);\r\n    const sec: DatasetSection = { id, status:\"input\", filters:[], options:{} };\r\n    setSections(prev => [sec, ...prev]);\r\n    setIsEditing(true);\r\n    setAppStarted(true);\r\n    setAddingDataset(true); // show search bar during edit\r\n  }\r\ntype LayerGroup = \"Active\" | \"Property\" | \"Social\" | \"Infrastructure\" | \"Areas\";\r\n\r\ntype LayerCfg = {\r\n  id: string;             // maplibre layer id (or pseudo)\r\n  title: string;\r\n  group: LayerGroup;\r\n  on?: boolean;           // default visibility\r\n  type: \"fill\"|\"line\"|\"circle\";\r\n  sourceId?: string;      // we’ll attach when source is created\r\n};\r\n\r\nconst layerCatalog: LayerCfg[] = [\r\n  { id: \"planning-fill\", title: \"Planning Zones (fill)\", group:\"Property\", on:true,  type:\"fill\",   sourceId:\"planning\" },\r\n  { id: \"planning-line\", title: \"Planning Zones (line)\", group:\"Property\", on:true,  type:\"line\",   sourceId:\"planning\" },\r\n  { id: \"pois\",          title: \"POIs\",                   group:\"Infrastructure\",     on:false, type:\"circle\", sourceId:\"pois\" },\r\n  { id: \"sa2-fill\",      title: \"SA2 (fill)\",             group:\"Areas\",              on:false, type:\"fill\",   sourceId:\"sa2\" },\r\n  { id: \"sa2-line\",      title: \"SA2 (line)\",             group:\"Areas\",              on:false, type:\"line\",   sourceId:\"sa2\" },\r\n];\r\nconst [layerState, setLayerState] = useState<Record<string, boolean>>(\r\n  Object.fromEntries(layerCatalog.map(l => [l.id, !!l.on]))\r\n);\r\n\r\n{showLayers && (\r\n  <div className=\"fixed top-16 left-4 z-30 w-80 max-h-[70vh] overflow-auto bg-white/95 border rounded-2xl shadow p-3\">\r\n    <div className=\"text-sm font-semibold mb-2\">Layers</div>\r\n    {[\"Active\",\"Property\",\"Social\",\"Infrastructure\",\"Areas\"].map(g => {\r\n      const items = layerCatalog.filter(l => l.group===g);\r\n      if (!items.length) return null;\r\n      const active = g===\"Active\"\r\n        ? Object.entries(layerState).filter(([id,on]) => on)\r\n            .map(([id]) => layerCatalog.find(l=>l.id===id)).filter(Boolean) as LayerCfg[]\r\n        : items;\r\n      if (!active.length) return null;\r\n      return (\r\n        <div key={g} className=\"mb-3\">\r\n          <div className=\"text-xs uppercase tracking-wide opacity-70 mb-1\">{g}</div>\r\n          <div className=\"space-y-1\">\r\n            {active.map(l => (\r\n              <label key={l.id} className=\"flex items-center justify-between gap-2 text-sm bg-white border rounded-lg px-2 py-1\">\r\n                <span>{l.title}</span>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!!layerState[l.id]}\r\n                  onChange={(e) => {\r\n                    const on = e.target.checked;\r\n                    setLayerState(prev => ({...prev, [l.id]: on}));\r\n                    const map = mapRef.current;\r\n                    if (!map) return;\r\n                    if (map.getLayer(l.id)) {\r\n                      map.setLayoutProperty(l.id, \"visibility\", on ? \"visible\" : \"none\");\r\n                    }\r\n                  }}\r\n                />\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n)}\r\n\r\n\r\n  /* Choose suggestion → address fills Location; datasets populate first input section */\r\n\r\n  function onChoose(s: SuggestItem){\r\n  // Address\r\n  if (s.tag === \"Address\") {\r\n    setAppStarted(true);\r\n    setIsEditing(true);\r\n    setAddingDataset(false);          // ← ensure search bar hides\r\n    setLocation({ mode: \"address\", address: s.label, status: \"input\" });\r\n    setLocAddrText(s.label);\r\n    setLocAddrSuggestions([]);\r\n    setOpen(false); setSuggestions([]);\r\n    setText(\"\");\r\n    if (inputRef.current) inputRef.current.blur();\r\n    return;\r\n  }\r\n\r\n  if (!appStarted) { setAppStarted(true); setIsEditing(true); }\r\n  setAddingDataset(false);            // ← ensure search bar hides after dataset pick\r\n  setOpen(false); setSuggestions([]); setText(\"\");\r\n  if (inputRef.current) inputRef.current.blur();\r\n\r\n  if (sections.length===0 || !sections[0] || sections[0].status!==\"input\") addDatasetSection();\r\n\r\n  setSections(prev => {\r\n    const [head, ...tail] = prev;\r\n    const next = {...head};\r\n    if (s.key===\"planning_zones\"){ next.dataset=\"planning_zones\"; next.intent=\"data\"; next.options={ zoneCode:\"All\" }; }\r\n    else if (s.key===\"pois\"){      next.dataset=\"pois\"; next.intent=\"places\"; next.options={ poiType:\"All\" }; }\r\n    else if (s.key===\"sa2\"){       next.dataset=\"sa2\"; next.intent=\"areas\"; }\r\n    else if (s.key===\"dwell_struct\"){ next.dataset=\"dwell_struct\"; next.intent=\"data\"; next.options={ year:2021, category:\"Separate_house\" }; }\r\n    next.status = \"input\";\r\n    return [next, ...tail];\r\n  });\r\n}\r\n\r\n\r\n  /* Dataset option handlers */\r\n  function onZoneChange(idx:number, val:string){\r\n    setSections(prev => prev.map((s,i)=>{\r\n      if(i!==idx) return s;\r\n      const filters = s.filters.filter(f=>f.field!==\"ZONE_CODE\");\r\n      if (val && val!==\"All\") filters.push({ field:\"ZONE_CODE\", op:\"=\", value:val });\r\n      return {...s, filters, options:{...s.options, zoneCode:val}};\r\n    }));\r\n  }\r\n  function onPoiTypeChange(idx:number, val:string){\r\n    setSections(prev => prev.map((s,i)=>{\r\n      if(i!==idx) return s;\r\n      const filters = s.filters.filter(f=>f.field!==\"FTYPE\");\r\n      if (val && val!==\"All\") filters.push({ field:\"FTYPE\", op:\"=\", value:val });\r\n      return {...s, filters, options:{...s.options, poiType:val}};\r\n    }));\r\n  }\r\n\r\n  /* Switch dataset via pill dropdown */\r\n  function switchDataset(idx:number, key:DatasetKey){\r\n    setSections(prev => prev.map((s,i)=>{\r\n      if(i!==idx) return s;\r\n      const base: DatasetSection = { ...s, dataset:key, filters:[], _fc: undefined, status:\"input\" };\r\n      if (key===\"planning_zones\") base.options = { zoneCode:\"All\" };\r\n      else if (key===\"pois\")      base.options = { poiType:\"All\" };\r\n      else if (key===\"dwell_struct\") base.options = { year:2021, category:\"Separate_house\" };\r\n      else base.options = {};\r\n      return base;\r\n    }));\r\n    setIsEditing(true);\r\n    setAppStarted(true);\r\n  }\r\n\r\n  /* Delete dataset tab */\r\n  function deleteSection(idx:number){\r\n    setSections(prev => prev.filter((_,i)=>i!==idx));\r\n  }\r\n\r\n  /* Done / Edit toggles */\r\n  function onDone() {\r\n    // Verify location + datasets minimal requirements\r\n    const locOk = location.mode === \"address\"\r\n               || location.mode === \"area\"\r\n               || location.mode === \"within\";\r\n    setLocation(prev => ({ ...prev, status: locOk ? \"verified\" : \"input\" }));\r\n    setSections(prev => prev.map(s => ({ ...s, status: s.dataset ? \"verified\" : \"input\" })));\r\n    const willBeAllVerified = sections.length>0 && sections.every(s => !!s.dataset);\r\n    if (locOk && willBeAllVerified) {\r\n      setIsEditing(false);\r\n      setAddingDataset(false); // hide search bar\r\n    }\r\n  }\r\n  function onEdit() {\r\n    setIsEditing(true);\r\n  }\r\nasync function exportPDF() {\r\n  const map = mapRef.current;\r\n  if (!map) return;\r\n  const canvas = map.getCanvas();\r\n  const dataUrl = canvas.toDataURL(\"image/png\");\r\n  const { jsPDF } = await import(\"jspdf\");\r\n  const pdf = new jsPDF({ orientation:\"landscape\", unit:\"pt\", format:\"a4\" });\r\n  const pageW = pdf.internal.pageSize.getWidth();\r\n  const pageH = pdf.internal.pageSize.getHeight();\r\n  const imgW = pageW-40, imgH = pageH-40;\r\n  pdf.addImage(dataUrl, \"PNG\", 20, 20, imgW, imgH);\r\n  pdf.save(\"map.pdf\");\r\n}\r\n\r\n  /* Show Data: fetch ALL verified datasets */\r\n  async function onShowData(){\r\n    const ready = sections.filter(s => s.status===\"verified\" && s.dataset);\r\n    if (ready.length===0 || location.status!==\"verified\") return;\r\n    setSections(prev => prev.map(s => ({ ...s, status: s.status===\"verified\" ? \"searching\" : s.status })));\r\n    try {\r\n      const results: Record<string, GeoJSON.FeatureCollection> = {};\r\n      for (const s of ready) {\r\n        const q:any = { dataset: s.dataset, filters: s.filters };\r\n        if (s.dataset===\"dwell_struct\") { q.time = s.options?.year ?? 2021; q.category = s.options?.category ?? \"Separate_house\"; }\r\n        const fc = await fetchGeoJSON(q);\r\n        results[s.id] = fc;\r\n      }\r\n      setSections(prev => prev.map(s => ({ ...s, _fc: results[s.id] ?? s._fc })));\r\n      setPanelOpen(false); // collapse to summary\r\n    } finally {\r\n      setSections(prev => prev.map(s => ({ ...s, status: s.status===\"searching\" ? \"verified\" : s.status })));\r\n    }\r\n  }\r\n\r\n  /* Suggest open/close (main bar) */\r\n  const onBlurClose = () => setTimeout(()=>setOpen(false),110);\r\n  const onFocusOpen = () => { if (text.trim().length>=2 && panelOpen) setOpen(true); };\r\n\r\n  const [showLayers, setShowLayers] = useState(false);\r\nconst [showInput,  setShowInput]  = useState(false);\r\nconst [showExport, setShowExport] = useState(false);\r\nconst [showMyData, setShowMyData] = useState(false);\r\nconst [showAccount,setShowAccount]= useState(false);\r\n\r\nuseEffect(() => {\r\n  const q = (id:string) => document.getElementById(id);\r\n  q(\"btn-layers\")?.addEventListener(\"click\", ()=>setShowLayers(v=>!v));\r\n  q(\"btn-input\") ?.addEventListener(\"click\", ()=>setShowInput(v=>!v));\r\n  q(\"btn-export\")?.addEventListener(\"click\", ()=>setShowExport(v=>!v));\r\n  q(\"btn-mydata\")?.addEventListener(\"click\", ()=>setShowMyData(v=>!v));\r\n  q(\"btn-account\")?.addEventListener(\"click\", ()=>setShowAccount(v=>!v));\r\n  return () => {};\r\n}, []);\r\n\r\n\r\n\r\n  /* Dataset chooser pill (dropdown) */\r\n  function DatasetChooser({idx, current}:{idx:number; current?:DatasetKey}) {\r\n    const [show, setShow] = useState(false);\r\n    const items: {key:DatasetKey; label:string}[] = [\r\n      { key:\"planning_zones\", label:\"Planning Zones\" },\r\n      { key:\"pois\", label:\"POIs\" },\r\n      { key:\"sa2\", label:\"SA2 Boundaries\" },\r\n      { key:\"dwell_struct\", label:\"Dwelling Structure\" },\r\n    ];\r\n    const currentLabel = items.find(i=>i.key===current)?.label || \"Choose Dataset\";\r\n    return (\r\n      <div className=\"relative inline-block\">\r\n        <Pill active className=\"border-[var(--clr-primary)] text-[var(--clr-primary)]\" onClick={()=>setShow(s=>!s)}>\r\n          {currentLabel}\r\n        </Pill>\r\n        {show && (\r\n          <div className=\"absolute z-30 mt-2 bg-white border rounded-xl shadow-xl min-w-[220px] p-1\">\r\n            {items.map(it => (\r\n              <button key={it.key}\r\n                className={`w-full text-left px-3 py-2 rounded-lg hover:bg-gray-50 ${it.key===current ? \"bg-gray-100\" : \"\"}`}\r\n                onClick={()=>{ switchDataset(idx, it.key); setShow(false); }}>\r\n                {it.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /* Header title: “Search” while typing; otherwise “Showing” after first selection */\r\n  const headerTitle = (appStarted && text.trim()===\"\") ? \"Showing\" : \"Search\";\r\n\r\n  /* Search row (welcome + when addingDataset) */\r\n  const SearchRow = (\r\n    <div className=\"relative\">\r\n      <input\r\n        ref={inputRef}\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Search datasets, places, or areas…\"\r\n        className=\"w-full border rounded-xl px-4 py-3 outline-none shadow-sm bg-white\"\r\n        onFocus={onFocusOpen}\r\n        onBlur={onBlurClose}\r\n      />\r\n      {open && (\r\n        <div className=\"absolute z-40 left-0 right-0 top-full mt-2 bg-white border rounded-xl shadow-xl max-h-64 overflow-auto\">\r\n          {suggestions.length === 0 ? (\r\n            <div className=\"px-3 py-2 text-sm text-gray-500\">Searching…</div>\r\n          ) : suggestions.map((s, i) => (\r\n            <button key={s.key + i}\r\n              className=\"w-full px-3 py-2 flex items-center gap-2 hover:bg-gray-50 text-left\"\r\n              onMouseDown={(e)=>e.preventDefault()}\r\n              onClick={()=>onChoose(s)}\r\n            >\r\n              <TagPill tag={s.tag} />\r\n              <span className=\"truncate\">{s.label}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  /* Summary sentence when panel collapsed */\r\n  const SummaryBar = !panelOpen ? (\r\n    <div className=\"absolute left-1/2 -translate-x-1/2\" style={{ top: 20, width: \"min(940px, 88vw)\" }}>\r\n      <div className=\"px-4 py-2 bg-white/95 border rounded-full shadow flex items-center gap-2 justify-center\">\r\n        <span className=\"opacity-80\">Showing:</span>\r\n        {sections.map((s) => {\r\n          const parts: string[] = [];\r\n          if (s.dataset===\"planning_zones\") {\r\n            parts.push(\"Planning zones\");\r\n            if (s.options?.zoneCode && s.options.zoneCode!==\"All\") parts.push(`zone ${s.options.zoneCode}`);\r\n          } else if (s.dataset===\"pois\") {\r\n            parts.push(\"POIs\");\r\n            if (s.options?.poiType && s.options.poiType!==\"All\") parts.push(s.options.poiType);\r\n          } else if (s.dataset===\"sa2\") {\r\n            parts.push(\"SA2 boundaries\");\r\n          } else if (s.dataset===\"dwell_struct\") {\r\n            parts.push(\"Dwelling structure\");\r\n            if (s.options?.category) parts.push(s.options.category.replaceAll(\"_\",\" \"));\r\n            if (s.options?.year) parts.push(String(s.options.year));\r\n          }\r\n          return <Pill key={s.id} active>{parts.join(\", \") || \"Dataset\"}</Pill>;\r\n        })}\r\n        <span className=\"opacity-80\">for Location:</span>\r\n        {location.mode===\"address\" && <Pill active>Address</Pill>}\r\n        {location.mode===\"area\" && <Pill active>Area</Pill>}\r\n        {location.mode===\"within\" && (\r\n          <>\r\n            <Pill active>within</Pill>\r\n            {location.within?.distance_m && <Pill active>{location.within.distance_m} m</Pill>}\r\n            {location.within?.place_type && <Pill active>{location.within.place_type}</Pill>}\r\n          </>\r\n        )}\r\n        <Pill className=\"border-[var(--clr-primary)] text-[var(--clr-primary)]\" onClick={()=>{ setPanelOpen(true); setIsEditing(true); }}>\r\n          Edit Search\r\n        </Pill>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"w-full h-screen relative\">\r\n      {/* Map */}\r\n      <div ref={mapContainer} className=\"absolute inset-0\" style={{ minHeight:\"100vh\" }} />\r\n\r\n      {/* Summary when collapsed */}\r\n      {SummaryBar}\r\n\r\n      {/* Center panel */}\r\n      {panelOpen && (\r\n  <div className=\"absolute left-1/2 -translate-x-1/2\" style={{ top:\"15vh\", width:\"min(940px, 88vw)\" }}>\r\n    <div className=\"bg-white/92 backdrop-blur-sm border rounded-2xl shadow-lg p-4\">\r\n      {/* Welcome state: just the input */}\r\n      {!appStarted && SearchRow}\r\n\r\n      {/* Editing (after startup) – only when adding */}\r\n      {appStarted && isEditing && addingDataset && SearchRow}\r\n\r\n      {appStarted && (\r\n        <>\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <div className=\"text-lg font-semibold\">{headerTitle}</div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                className={`px-3 py-1.5 rounded-lg border ${isEditing ? \"text-white\" : \"\"}`}\r\n                style={{ background: isEditing ? \"var(--clr-primary)\" : \"white\" }}\r\n                onClick={()=> isEditing ? onDone() : onEdit()}\r\n              >\r\n                {isEditing ? \"Done\" : \"Edit\"}\r\n              </button>\r\n              <button\r\n                disabled={!canShowData}\r\n                onClick={onShowData}\r\n                className={`px-4 py-2 rounded-lg text-white ${canShowData ? \"btn-accent hover:opacity-95\" : \"bg-gray-300\"}`}\r\n              >\r\n                Show Data\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* …rest of your content (dataset tabs, location row, etc.) … */}\r\n        </>\r\n      )}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1188, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mccar/PROJECTS/2400%20ECHO%20APP/echoapp/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport MapApp from '../components/MapApp';\r\n\r\nexport default function Page() {\r\n  return <MapApp />;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,mJAAM;;;;;AAChB","debugId":null}}]
}